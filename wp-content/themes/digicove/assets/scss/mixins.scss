@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null {
      // Do nothing
  } @else if not comparable($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
  } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
  }
  $prev-key: $key;
  $prev-num: $num;
}
}

// Starts at zero
// Another grid mixin that ensures the min-width of the lowest breakpoint starts at 0.
@mixin _assert-starts-at-zero($map) {
  $values: map-values($map);
  $first-value: nth($values, 1);
  @if $first-value != 0 {
    @warn "First breakpoint in `$grid-breakpoints` must start at 0, but starts at #{$first-value}.";
}
}
// ADDS A BROWSER PREFIX TO THE PROPERTY
@mixin css3-prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -khtml-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    -o-#{$property}: #{$value};
    #{$property}: #{$value};
}
// BACKGROUND GRADIENT
@mixin pxl-bg-gradient($direction, $list) {
    background: -webkit-linear-gradient($direction, $list);
    background: -moz-linear-gradient($direction, $list);
    background: -o-linear-gradient($direction, $list);
    background: linear-gradient($direction, $list);  
}
@mixin background-gradient-button($rotate, $color1, $color2, $color3) {
    background-image: -webkit-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:    -moz-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:     -ms-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:      -o-linear-gradient($rotate, $color1, $color2, $color3);
    background-image:         linear-gradient($rotate, $color1, $color2, $color3);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-rotate($rotate, $startColor, $endColor) {
    background-image: -webkit-linear-gradient($rotate, $startColor, $endColor);
    background-image:    -moz-linear-gradient($rotate, $startColor, $endColor);
    background-image:     -ms-linear-gradient($rotate, $startColor, $endColor);
    background-image:      -o-linear-gradient($rotate, $startColor, $endColor);
    background-image:         linear-gradient($rotate, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-top($startColor: #ffb400, $endColor: #f9a33a) {
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(to top, $startColor, $endColor);
    background-image:    -moz-linear-gradient(to top, $startColor, $endColor);
    background-image:     -ms-linear-gradient(to top, $startColor, $endColor);
    background-image:      -o-linear-gradient(to top, $startColor, $endColor);
    background-image:         linear-gradient(to top, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}
@mixin background-gradient-bottom($startColor: #ffb400, $endColor: #f9a33a) {
    background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(to bottom, $startColor, $endColor);
    background-image:    -moz-linear-gradient(to bottom, $startColor, $endColor);
    background-image:     -ms-linear-gradient(to bottom, $startColor, $endColor);
    background-image:      -o-linear-gradient(to bottom, $startColor, $endColor);
    background-image:         linear-gradient(to bottom, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

// BACKGROUND HORIZONTAL
@mixin background-horizontal($startColor: #ffb400, $endColor: #f9a33a) {
    background-color: $startColor;
    background-image: -webkit-gradient(linear, right top, left top, from($startColor), to($endColor));
    background-image: -webkit-linear-gradient(to right, $startColor, $endColor);
    background-image:    -moz-linear-gradient(to right, $startColor, $endColor);
    background-image:     -ms-linear-gradient(to right, $startColor, $endColor);
    background-image:      -o-linear-gradient(to right, $startColor, $endColor);
    background-image:         linear-gradient(to right, $startColor, $endColor);
    filter:            progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}', gradientType='1');
}

// BACKGROUND RADIAL
@mixin background-radial($startColor: #FFFFFF, $startPos: 0%, $endColor: #000000, $endPos:100%) {
    background: -moz-radial-gradient(center, ellipse cover, $startColor $startPos, $endColor $endPos);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop($startPos,$startColor), color-stop($endPos,$endColor));
    background: -webkit-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: -o-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: -ms-radial-gradient(center, ellipse cover, $startColor $startPos,$endColor $endPos);
    background: radial-gradient(ellipse at center, $startColor $startPos,$endColor $endPos);
}

// BACKGROUND SIZE
@mixin background-size($width: 100%, $height: $width) {
    @if type-of($width) == 'number' and $height != null {
        @include css3-prefix('background-size', $width $height);
    } @else {
        @include css3-prefix('background-size', $width);
    }
}

// BACKGROUND COLOR OPACITY
@mixin background-opacity($color: #000, $opacity: 0.85) {
    background: $color;
    background: rgba($color, $opacity);
}

// BORDER RADIUS
@mixin border-radius($radius: 5px) {
    @include css3-prefix('border-radius', $radius);
}

@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
    -webkit-border-top-left-radius:     $topLeftRadius;
    -webkit-border-top-right-radius:    $topRightRadius;
    -webkit-border-bottom-right-radius: $bottomRightRadius;
    -webkit-border-bottom-left-radius:  $bottomLeftRadius;

    -moz-border-radius-topleft:     $topLeftRadius;
    -moz-border-radius-topright:    $topRightRadius;
    -moz-border-radius-bottomright: $bottomRightRadius;
    -moz-border-radius-bottomleft:  $bottomLeftRadius;

    border-top-left-radius:     $topLeftRadius;
    border-top-right-radius:    $topRightRadius;
    border-bottom-right-radius: $bottomRightRadius;
    border-bottom-left-radius:  $bottomLeftRadius;
}

// BOX
@mixin box($orient: horizontal, $pack: center, $align: center) {
    display: -webkit-box;
    display: -moz-box;
    display: box;

    @include css3-prefix('box-orient', $orient);
    @include css3-prefix('box-pack', $pack);
    @include css3-prefix('box-align', $align);
}

// BOX RGBA
@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
    background-color: transparent;
    background-color: rgba($r, $g, $b, $opacity);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$color}',endColorstr='#{$color}');
    zoom:   1;
}

// BOX SHADOW
@mixin box-shadow($x) {
    @include css3-prefix('box-shadow', $x);
}

// BOX SIZING
@mixin box-sizing($type: border-box) {
    @include css3-prefix('box-sizing', $type);
}

// COLUMNS
@mixin columns($count: 3, $gap: 10) {
    @include css3-prefix('column-count', $count);
    @include css3-prefix('column-gap', $gap);
}

// DOUBLE BORDERS
@mixin double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0) {
    border: 1px solid $colorOne;

    @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo);

    @include border-radius( $radius );
}

// FLEX
@mixin flex($value: 1) {
    @include css3-prefix('box-flex', $value);
}

// FLIP
@mixin flip($scaleX: -1) {
    @include css3-prefix('transform', scaleX($scaleX));
    filter:            FlipH;
    -ms-filter:        "FlipH";
}


@keyframes pxl-jump {
    50% {
        -webkit-transform: translateY(-30%);
        transform: translateY(-30%);
    }
}

@keyframes pxl-upscale {
    50% {
        -webkit-transform: scale(1.5);
        transform: scale(1.5);
    }
}

@keyframes pxl-upscale {
    50% {
        -webkit-transform: scale(1.5);
        transform: scale(1.5);
    }
}

@keyframes pxl-spin {
    50% {
        -webkit-transform: rotate(180deg);
        transform: rotate(180deg);
    }
}

@keyframes pxl-squash {
    50% {
        -webkit-transform: scaleY(0);
        transform: scaleY(0);
    }
}

@keyframes pxl-skew {
    50% {
        -webkit-transform: skew(-30deg);
        transform: skew(-30deg);
    }
}

@keyframes pxl-leap {
    50% {
        -webkit-transform: translateY(-50%) rotate(-15deg);
        transform: translateY(-50%) rotate(-15deg);
    }
}

@keyframes pxl-fade {
    50% {
        -webkit-transform: translateY(50%);
        transform: translateY(50%);
        opacity: 0;
    }
}

@keyframes pxl-sheen {
    50% {
        -webkit-transform: translateY(-10%);
        transform: translateY(-10%);
        color: #eee;
    }
}

@keyframes pxl-xspin {
    50% {
        -webkit-transform: scaleX(0);
        transform: scaleX(0);
    }
}

// FONT FACE
@mixin font-face($fontFamily: myFont, $eotFileSrc: 'myFont.eot', $woffFileSrc: 'myFont.woff', $ttfFileSrc: 'myFont.ttf', $svgFileSrc: 'myFont.svg', $svgFontID: '#myFont') {
    font-family: $fontFamily;
    src: url($eotFileSrc)  format('eot'),
    url($woffFileSrc) format('woff'),
    url($ttfFileSrc)  format('truetype'),
    url($svgFileSrc + $svgFontID) format('svg');
}

// OPACITY
@mixin opacity($opacity: 0.5) {
    $opacityMultiplied: ($opacity * 100);

    filter:         alpha(opacity=$opacityMultiplied);
    -ms-filter:     "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")";
    @include css3-prefix('opacity', $opacity);
}


// OUTLINE RADIUS
@mixin outline-radius($radius: 5px) {
    @include css3-prefix('outline-radius', $radius);
}

// RESIZE
@mixin resize($direction: both) {
    @include css3-prefix('resize', $direction);
}

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
    @include css3-prefix('transform', rotate($deg + deg));
    filter: progid:DXImageTransform.Microsoft.Matrix(
        M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
    zoom: 1;
}

// TEXT SHADOW
@mixin text-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4)) {
    text-shadow: $x $y $blur $color;
}

// TRANSFORM
@mixin transform($params) {
    @include css3-prefix('transform', $params);
}

// TRANSFORM ORIGIN
@mixin transform-origin($params) {
    @include css3-prefix('transform-origin', $params);
}

// TRANSFORM STYLE
@mixin transform-style($style: preserve-3d) {
    @include css3-prefix('transform-style', $style);
}

// TRANSITION
@mixin transition($properties...) {
    @if length($properties) >= 1 {
        @include css3-prefix('transition', $properties);
    }
    @else {
        @include css3-prefix('transition', 'all 300ms ease-in-out');
    }
}
// TRIPLE BORDERS
@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
    border: 1px solid $colorOne;

    @include border-radius($radius);

    @include css3-prefix('box-shadow', 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree);
}

// KEYFRAMES
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }
    @keyframes #{$animation-name} {
        @content;
    }
}

@keyframes pxl-jump {
    50% {
        -webkit-transform: translateY(-30%);
        transform: translateY(-30%);
    }
}

@keyframes pxl_load_spinner {
    to {
        @include transform(rotateZ(360deg));
    }
}

@keyframes pxl_load_characters {
    0%,
    75%,
    100% {
        opacity: 0;
        @include transform(rotateY(-90deg));
    }
    25%,
    50% {
        opacity: 1;
        @include transform(rotateY(0deg));
    }
}

@keyframes pxl-upscale {
    50% {
        -webkit-transform: scale(1.5);
        transform: scale(1.5);
    }
}

@keyframes pxl-upscale {
    50% {
        -webkit-transform: scale(1.5);
        transform: scale(1.5);
    }
}

@keyframes pxl-spin {
    50% {
        -webkit-transform: rotate(180deg);
        transform: rotate(180deg);
    }
}

@keyframes pxl-squash {
    50% {
        -webkit-transform: scaleY(0);
        transform: scaleY(0);
    }
}

@keyframes pxl-skew {
    50% {
        -webkit-transform: skew(-30deg);
        transform: skew(-30deg);
    }
}

@keyframes pxl-leap {
    50% {
        -webkit-transform: translateY(-50%) rotate(-15deg);
        transform: translateY(-50%) rotate(-15deg);
    }
}

@keyframes pxl-fade {
    50% {
        -webkit-transform: translateY(50%);
        transform: translateY(50%);
        opacity: 0;
    }
}

@keyframes pxl-sheen {
    50% {
        -webkit-transform: translateY(-10%);
        transform: translateY(-10%);
        color: #eee;
    }
}

@keyframes pxl-xspin {
    50% {
        -webkit-transform: scaleX(0);
        transform: scaleX(0);
    }
}

// ANIMATION
@mixin animation($str) {
    @include css3-prefix('animation', $str);
}


// ThemeAmber
// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
    font-size: ($sizeValue * 16) * 1px;
    font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

// Clearfix
@mixin clearfix() {
    content: "";
    display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
    clear: both;
}

@mixin d-flex(){
    display: -webkit-box; 
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex; 
    display: flex;
    flex-wrap: wrap; 
}

@mixin d-flex-align-justify-center(){
    display: -webkit-box; 
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex; 
    display: flex;
    flex-wrap: wrap; 
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
}

$max-3xs: "screen and (max-width: 360px)";
$max-xsx: "screen and (max-width: 480px)";
$max-xs: "screen and (max-width: 575px)";
$max-sm: "screen and (max-width: 767px)";
$max-md: "screen and (max-width: 991px)";
$max-md2: "screen and (max-width: 1024px)";
$max-lg: "screen and (max-width: 1199px)";
$max-lg2: "screen and (max-width: 1260px)";
$max-lg3: "screen and (max-width: 1280px)";
$max-xl: "screen and (max-width: 1400px)";
$max-xxl: "screen and (max-width: 1600px)";
$max-xxx: "screen and (max-width: 1900px)";

$min-sm: "screen and (min-width: 576px)";
$min-md: "screen and (min-width: 768px)";
$min-lg: "screen and (min-width: 992px)";
$min-lg2: "screen and (min-width: 1025px)";
$min-xl: "screen and (min-width: 1200px)";
$min-xl2: "screen and (min-width: 1260px)";
$min-xxl: "screen and (min-width: 1400px)";
$min-xxf: "screen and (min-width: 2200px)";

$mm-sm: "(min-width: 576px) and (max-width: 767px)";
$mm-xtr: "(min-width: 576px) and (max-width: 991px)";
$mm-md: "(min-width: 768px) and (max-width: 991px)";
$mm-lg: "(min-width: 992px) and (max-width: 1199px)";
$mm-lg2: "(min-width: 992px) and (max-width: 1280px)";
$mm-lg3: "(min-width: 768px) and (max-width: 1199px)";
$mm-lg4: "(min-width: 768px) and (max-width: 1400px)";
$mm-xl: "(min-width: 1200px) and (max-width: 1400px)";

@keyframes pxl_scale1 {
  0% {
    transform: scale(1);
    opacity: 0.67;
}
100% {
    transform: scale(2.2);
    opacity: 0;
}
}

@-webkit-keyframes pxl_scale1 {
  0% {
    transform: scale(1);
    opacity: 0.67;
}
100% {
    transform: scale(2.2);
    opacity: 0;
}
}

@-ms-keyframes pxl_spin {
    from { -ms-transform: rotate(0deg); }
    to { -ms-transform: rotate(360deg); }
}
@-moz-keyframes pxl_spin {
    from { -moz-transform: rotate(0deg); }
    to { -moz-transform: rotate(360deg); }
}
@-webkit-keyframes pxl_spin {
    from { -webkit-transform: rotate(0deg); }
    to { -webkit-transform: rotate(360deg); }
}
@keyframes pxl_spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(360deg);
    }
}

@-webkit-keyframes pxl_right_from_left {
  49% {
    -webkit-transform: translate(100%);
}
50% {
    opacity: 0;
    -webkit-transform: translate(-100%);
}
51% {
    opacity: 1;
}
}
@-moz-keyframes pxl_right_from_left {
  49% {
    -moz-transform: translate(100%);
}
50% {
    opacity: 0;
    -moz-transform: translate(-100%);
}
51% {
    opacity: 1;
}
}

@-webkit-keyframes pxl-spin {
    0% {
        -webkit-transform: rotate(0);
        transform: rotate(0)
    }

    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg)
    }
}

@-moz-keyframes pxl-spin {
    0% {
        -webkit-transform: rotate(0);
        transform: rotate(0)
    }

    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg)
    }
}

@-ms-keyframes pxl-spin {
    0% {
        -webkit-transform: rotate(0);
        transform: rotate(0)
    }

    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg)
    }
}

@-o-keyframes pxl-spin {
    0% {
        -webkit-transform: rotate(0);
        transform: rotate(0)
    }

    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg)
    }
}

@keyframes pxl-spin {
    0% {
        -webkit-transform: rotate(0);
        transform: rotate(0)
    }

    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg)
    }
}

@-ms-keyframes pxl_spin {
    from {
        -ms-transform: rotate(0)
    }

    to {
        -ms-transform: rotate(360deg)
    }
}

@-moz-keyframes pxl_spin {
    from {
        -moz-transform: rotate(0)
    }

    to {
        -moz-transform: rotate(360deg)
    }
}

@-webkit-keyframes pxl_spin {
    from {
        -webkit-transform: rotate(0)
    }

    to {
        -webkit-transform: rotate(360deg)
    }
}

@keyframes pxl_spin {
    from {
        transform: rotate(0)
    }

    to {
        transform: rotate(359deg)
    }
}

@keyframes textStrokeAnim {
    0% {
        stroke-dasharray: 100%;
        stroke-dashoffset: 100%;
        fill: #0000;
    }
    95% {
        stroke-dasharray: 0%;
        stroke-dashoffset: 90%;
        fill: #0000;
    }
    100% {
        stroke-dasharray: 0%;
        stroke-dashoffset: 0%;
        fill: #9b9dad;
        filter: drop-shadow(2px 2px 10px #0007);
    }
}

@keyframes pxlInnerOut {
    0% {
        transform: translateX(0);
    }
    100% {
        transform: translateX(-100%);
    }
}
@keyframes pxlImgOut {
    0% {
        transform: translateX(0) scale(1);
    }
    100% {
        transform: translateX(100%) scale(1.15);
    }
}
@keyframes pxlInnerIn {
    0% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(0);
    }
}
@keyframes pxlImgIn {
    0% {
        transform: translateX(-100%) scale(1.15);
    }
    100% {
        transform: translateX(0) scale(1);
    }
}

@keyframes pxl_right_from_left {
  49% {
    transform: translate(100%);
}
50% {
    opacity: 0;
    transform: translate(-100%);
}
51% {
    opacity: 1;
}
}

@-webkit-keyframes pxl_left_from_right {
  49% {
    -webkit-transform: translate(-100%);
}
50% {
    opacity: 0;
    -webkit-transform: translate(100%);
}
51% {
    opacity: 1;
}
}
@-moz-keyframes pxl_left_from_right {
  49% {
    -moz-transform: translate(-100%);
}
50% {
    opacity: 0;
    -moz-transform: translate(100%);
}
51% {
    opacity: 1;
}
}
@keyframes pxl_left_from_right {
  49% {
    transform: translate(-100%);
}
50% {
    opacity: 0;
    transform: translate(100%);
}
51% {
    opacity: 1;
}
}

@keyframes pxl_grid_fall {
    0% {
        top: 0%;
    }

    100% {
        top: 100%;
    }
}

@keyframes pxl_bounce {
 0%, 100%, 20%, 50%, 80% {
  -webkit-transform: translateY(0);
  -ms-transform:     translateY(0);
  transform:         translateY(0) translateX(-50%);
}
40% {
  -webkit-transform: translateY(-8px);
  -ms-transform:     translateY(-8px);
  transform:         translateY(-8px) translateX(-50%);
}
60% {
  -webkit-transform: translateY(-4px);
  -ms-transform:     translateY(-4px);
  transform:         translateY(-4px) translateX(-50%);
}
}

@keyframes pxl_zigzag {
 0%, 100%, 20%, 50%, 80% {
  -webkit-transform: translateY(0);
  -ms-transform:     translateY(0);
  transform:         translateY(0)
}
40% {
  -webkit-transform: rotate(10deg);
  -ms-transform:     rotate(10deg);
  transform:         rotate(10deg)
}
60% {
  -webkit-transform: rotate(-10deg);
  -ms-transform:     rotate(-10deg);
  transform:         rotate(-10deg)
}
}

@keyframes pulse {
    100% {
        transform: scale(1.75);
        opacity: 0
    }
}

@keyframes pxl_right_left {
    0% {
        transform: translateX(0px);
    }
    25% {
        transform: translateX(40px);
    }
    50% {
        transform: translateX(0px);
    }
    75% {
        transform: translateX(-40px);
    }
    100% {
        transform: translateX(0px);
    }
}

.slide-right-to-left {
    animation: pxl_right_left 12s ease-out infinite;
    -webkit-animation: pxl_right_left 12s ease-out infinite;
}

@keyframes pxl_left_right {
    0% {
        transform: translateX(0px);
    }
    25% {
        transform: translateX(-40px);
    }
    50% {
        transform: translateX(0px);
    }
    75% {
        transform: translateX(40px);
    }
    100% {
        transform: translateX(0px);
    }
}

.slide-left-to-right {
    animation: pxl_left_right 12s ease-out infinite;
    -webkit-animation: pxl_left_right 12s ease-out infinite;
}

@keyframes pxl_bottom_top_small {
    0% {
        transform: translateX(0px);
    }
    25% {
        transform: translateY(10px);
    }
    50% {
        transform: translateY(0px);
    }
    75% {
        transform: translateY(-10px);
    }
    100% {
        transform: translateY(0px);
    }
}

@keyframes pxl_bottom_top {
    0% {
        transform: translateX(0px);
    }
    25% {
        transform: translateY(40px);
    }
    50% {
        transform: translateY(0px);
    }
    75% {
        transform: translateY(-40px);
    }
    100% {
        transform: translateY(0px);
    }
}

.slide-bottom-to-top {
    animation: pxl_bottom_top 12s ease-out infinite;
    -webkit-animation: pxl_bottom_top 12s ease-out infinite;
}

@-webkit-keyframes pxl_reveal{
    0%{
        -webkit-transform:translateY(0);
        transform:translateY(0)
    }
    80%{
        -webkit-transform:translateY(100%);
        transform:translateY(100%)
    }
    100%{
        -webkit-transform:translateY(100%);
        transform:translateY(100%)
    }
}
@keyframes pxl_reveal{
    0%{
        -webkit-transform:translateY(0);
        transform:translateY(0)
    }
    80%{
        -webkit-transform:translateY(100%);
        transform:translateY(100%)
    }
    100%{
        -webkit-transform:translateY(100%);
        transform:translateY(100%)
    }
}

@keyframes pxl_effect1 {
    0%{
        transform:translate(0px,0px)
    }
    20%{
        transform:translate(40px,-5px)
    }
    40%{
        transform:translate(60px,40px)
    }
    60%{
        transform:translate(40px,60px)
    }
    80%{
        transform:translate(-40px,60px)
    }
    100%{
        transform:translate(0px,0px)
    }
}

.slide-effect1 {
    animation: pxl_effect1 12s ease-out infinite;
    -webkit-animation: pxl_effect1 12s ease-out infinite;
}

@keyframes pxl_effect2 {
    0%{
        transform:translate(0px,0px)
    }
    20%{
        transform:translate(-30px,40px)
    }
    40%{
        transform:translate(60px,60px)
    }
    60%{
        transform:translate(70px,40px)
    }
    80%{
        transform:translate(40px,-70px)
    }
    100%{
        transform:translate(0px,0px)
    }
}

.slide-effect2 {
    animation: pxl_effect2 12s ease-out infinite;
    -webkit-animation: pxl_effect2 12s ease-out infinite;
}

@keyframes pxl_top_bottom {
    0% {
        transform: translateX(0px);
    }
    25% {
        transform: translateY(-40px);
    }
    50% {
        transform: translateY(0px);
    }
    75% {
        transform: translateY(40px);
    }
    100% {
        transform: translateY(0px);
    }
}

.slide-top-to-bottom {
    animation: pxl_top_bottom 12s ease-out infinite;
    -webkit-animation: pxl_top_bottom 12s ease-out infinite;
}

@keyframes sliderShape{
  0%,100%{
      border-radius: 42% 58% 70% 30% / 45% 45% 55% 55%;
      transform: translate3d(0,0,0) rotateZ(0.01deg);
  }
  34%{
      border-radius: 70% 30% 46% 54% / 30% 29% 71% 70%;
      transform:  translate3d(0,5px,0) rotateZ(0.01deg);
  }
  50%{
    transform: translate3d(0,0,0) rotateZ(0.01deg);
}
67%{
    border-radius: 100% 60% 60% 100% / 100% 100% 60% 60% ;
    transform: translate3d(0,-3px,0) rotateZ(0.01deg);
}
}

@keyframes zoomInUp {
    from {
        opacity: 0;
        transform: scale3d(.1,.1,.1) translate3d(0,1000px,0);
        animation-timing-function: cubic-bezier(.55,.055,.675,.19)
    }

    60% {
        opacity: 1;
        transform: scale3d(.475,.475,.475) translate3d(0,-60px,0);
        animation-timing-function: cubic-bezier(.175,.885,.32,1)
    }
}

.zoomInUp {
    animation-name: zoomInUp
}


@-webkit-keyframes pxl_fade_in_move {
    0% {
        opacity: 0;
        -webkit-transform: scale3d(0,1,1);
        transform: scale3d(0,1,1)
    }

    10% {
        opacity: 1;
        -webkit-transform: scale3d(.1,1,1);
        transform: scale3d(.1,1,1)
    }

    100% {
        opacity: .14;
        -webkit-transform: scale3d(1,1,1);
        transform: scale3d(1,1,1)
    }
}

@keyframes pxl_fade_in_move {
    0% {
        opacity: 0;
        -webkit-transform: scale3d(0,1,1);
        transform: scale3d(0,1,1)
    }

    10% {
        opacity: 1;
        -webkit-transform: scale3d(.1,1,1);
        transform: scale3d(.1,1,1)
    }

    100% {
        opacity: .14;
        -webkit-transform: scale3d(1,1,1);
        transform: scale3d(1,1,1)
    }
}

@-webkit-keyframes img_circle {
  0% {
    opacity: 1;
}
40% {
    opacity: 1;
}
100% {
    width: 200%;
    height: 200%;
    opacity: 0;
}
}
@keyframes img_circle {
  0% {
    opacity: 1;
}
40% {
    opacity: 1;
}
100% {
    width: 200%;
    height: 200%;
    opacity: 0;
}
}

@keyframes shine {
    100% {
        left: 125%
    }
}

@keyframes pxl-wide-menu-underline {
    0% {
        background-size: 100% 100%;
        background-position-x: 100%
    }

    100% {
        background-size: 0 100%;
        background-position-x: 100%
    }
}

@keyframes pxl-wide-menu-underline-hover {
    0% {
        background-position-x: 0;
        background-size: 0 100%
    }

    100% {
        background-position-x: 0;
        background-size: 100% 100%
    }
}

@keyframes full-circle {
  0% {
    transform: rotate(0deg);
}
100% {
    transform: rotate(360deg);
}
}

@-webkit-keyframes pxl_loader_bounce {
  0%, 100% { -webkit-transform: scale(0.0) }
  50% { -webkit-transform: scale(1.0) }
}

@keyframes pxl_loader_bounce {
  0%, 100% { 
    transform: scale(0.0);
    -webkit-transform: scale(0.0);
} 50% { 
    transform: scale(1.0);
    -webkit-transform: scale(1.0);
}
}

.icon-bounce {
  animation: icon-bounce 2s ease infinite;
}
@keyframes icon-bounce {
    70% { transform:translateY(0%); }
    80% { transform:translateY(-15%); }
    90% { transform:translateY(0%); }
    95% { transform:translateY(-7%); }
    97% { transform:translateY(0%); }
    99% { transform:translateY(-3%); }
    100% { transform:translateY(0); }
}

@-webkit-keyframes btn_shine{
    100%{
        left:200%
    }
}
@keyframes btn_shine{
    100%{
        left:200%
    }
}

@-webkit-keyframes pxl_skew_in{
    0%{
        -webkit-clip-path:inset(0 100% 0 0);
        clip-path:inset(0 100% 0 0);
        -webkit-transform:translateX(30px);
        transform:translateX(30px)
    }
    100%{
        -webkit-clip-path:inset(0 0 0 0);
        clip-path:inset(0 0 0 0);
        -webkit-transform:translateX(0);
        transform:translateX(0)
    }
}
@keyframes pxl_skew_in{
    0%{
        -webkit-clip-path:inset(0 100% 0 0);
        clip-path:inset(0 100% 0 0);
        -webkit-transform:translateX(30px);
        transform:translateX(30px)
    }
    100%{
        -webkit-clip-path:inset(0 0 0 0);
        clip-path:inset(0 0 0 0);
        -webkit-transform:translateX(0);
        transform:translateX(0)
    }
}
.pxl-skew-in{
    -webkit-animation-name:pxl_skew_in;
    animation-name:pxl_skew_in;
    -webkit-animation-duration:.8s!important;
    animation-duration:.8s!important;
    -webkit-animation-timing-function:cubic-bezier(.4,0,.2,1);
    animation-timing-function:cubic-bezier(.4,0,.2,1);
    will-change:transform;
    -webkit-backface-visibility:hidden;
    backface-visibility:hidden
}